version: "3"

volumes:
  node_modules:
  postgres_data:
    driver: "local"
  pgadmin:

services:
  db:
    build:
      context: ./postgresql
      dockerfile: Dockerfile
    container_name: ${POSTGRES_HOST}
    volumes:
      - postgres_data:/var/lib/postgresql/data # ※ホストOSで永続化
      - ./postgresql/initdb:/docker-entrypoint-initdb.d
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      - TZ=Asia/Tokyo
      - POSTGRES_INITDB_ARGS:--encoding=UTF-8 --locale=ja_JP.UTF-8
      - POSTGRES_USER #ユーザアカウント
      - POSTGRES_PASSWORD #ユーザアカウントのパスワード
      - POSTGRES_DB #DB名

  pgadmin:
    image: dpage/pgadmin4:4
    restart: always
    ports:
      - 8080:80
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      - ${POSTGRES_HOST}

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    # image: node:12
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
      - "9229:9229"
    working_dir: /backend
    volumes:
      - ./backend:/backend
      - node_modules:/backend/node_modules
    command: npm run watch
    environment:
      - DIALECT=${DIALECT}
      - PORT=${BACKEND_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER #ユーザアカウント
      - POSTGRES_PASSWORD #ユーザアカウントのパスワード
      - POSTGRES_DB #DB名
      - DATABASE_URL=${DIALECT}://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - DEV_DATABASE_URL=${DIALECT}://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/DEV_${POSTGRES_DB}
      - TEST_DATABASE_URL=${DIALECT}://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/TEST_${POSTGRES_DB}
    depends_on:
      - ${POSTGRES_HOST}
      #      LANG: ja_JP.UTF-8
# mongo:
#     image: mongo
#     restart: always
#     environment:
#       MONGO_INITDB_ROOT_USERNAME: root
#       MONGO_INITDB_ROOT_PASSWORD: example
#     ports:
#       - 27017:27017
#     volumes:
#       - ./mongo/db:/data/db
#       - ./mongo/configdb:/data/configdb

# mongo-express:
#     image: mongo-express
#     restart: always
#     ports:
#       - 8081:8081
#     environment:
#       ME_CONFIG_MONGODB_ADMINUSERNAME: root
#       ME_CONFIG_MONGODB_ADMINPASSWORD: example

